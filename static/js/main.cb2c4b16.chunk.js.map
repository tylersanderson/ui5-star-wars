{"version":3,"sources":["pages/people.component.jsx","pages/species.component.jsx","pages/films.component.jsx","pages/planets.component.jsx","pages/vehicles.component.jsx","pages/starships.component.jsx","pages/home.component.jsx","MyApp.jsx","App.js","serviceWorker.js","index.js"],"names":["People","useState","peopleList","setPeopleList","peopleTableColumnHeaders","setPeopleTableColumnHeaders","peoplePage","setPeoplePage","loading","setLoading","fetchPeopleList","x","a","fetch","people","json","peopleJSON","peopleColumnHeaders","Header","accessor","useEffect","then","result","handleNextPageClick","newPage","FlexBox","justifyContent","FlexBoxJustifyContent","Center","wrap","FlexBoxWrap","Wrap","style","spacing","sapUiContentPadding","Title","level","Card","heading","maxWidth","avatar","Icon","name","AnalyticalTable","data","results","columns","visibleRows","scaleWidthMode","Button","icon","onClick","disabled","previous","next","Species","speciesList","setSpeciesList","getListCount","initialList","initialListJSON","count","max","list","requests","i","url","prom","r","push","Promise","resolve","all","proms","forEach","p","fetchList","Spinner","map","species","key","Avatar","backgroundColor","imageFitType","shape","size","headerInteractive","onHeaderClick","status","length","width","padding","subheading","List","busy","infiniteScroll","inset","mode","separators","StandardListItem","description","iconEnd","infoState","selected","type","classification","language","average_lifespan","Films","filmList","setFilmList","setFilmTableColumnHeaders","filmPage","filmListResults","film","filmJSON","filmTableHeaders","fetchfilmList","alignItems","NotificationListItem","title","footnotes","Text","release_date","opening_crawl","Planets","planetsList","setPlanetsList","planetsTableColumnHeaders","setPlanetsTableColumnHeaders","planetsPage","setPlanetsPage","toggleCharts","setToggleCharts","fetchplanetsList","planets","planetsJSON","platentsTableHeaders","sortedPlanetsPopulationList","sort","b","parseFloat","population","sortedPlanetsDiameterList","diameter","contentTitle","switchToChart","LineChart","dimensions","measures","label","dataset","slice","BarChart","MicroBarChart","dimension","measure","Vehicles","vehiclesList","setVehiclesList","setVehiclesTableColumnHeaders","vehicleTableHeaders","array","removeJunkFromList","Carousel","arrowsPlacement","cyclic","hideNavigation","infiniteScrollOffset","itemsPerPageL","itemsPerPageM","itemsPerPageS","onNavigate","selectedIndex","vehicles","height","marginTop","position","ObjectPage","headerContent","display","flexDirection","renderWhitespace","wrapping","manufacturer","cost_in_credits","subTitle","model","ObjectPageSection","id","isSection","titleUppercase","Label","required","showColon","cargo_capacity","consumables","crew","passengers","max_atmosphering_speed","vehicle_class","Starships","starshipsList","setStarshipsList","setStarshipsTableColumnHeaders","starshipTableHeaders","starships","Panel","accessibleRole","collapsed","fixed","header","headerLevel","headerText","Home","ProductSwitch","ProductSwitchItem","subtitle","target","targetSrc","MyApp","history","useHistory","ShellBar","logo","alt","src","profile","image","primaryTitle","onLogoClick","onMenuItemClick","item","detail","menuItems","data-key","path","component","from","to","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb2c4b16.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Title,\r\n  FlexBox,\r\n  FlexBoxJustifyContent,\r\n  FlexBoxWrap,\r\n  AnalyticalTable,\r\n  Icon,\r\n  Button,\r\n} from \"@ui5/webcomponents-react\";\r\nimport { spacing } from \"@ui5/webcomponents-react-base\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/horizontal-bar-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/line-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/list.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/table-view.js\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\n\r\nexport function People() {\r\n  const [peopleList, setPeopleList] = useState([]);\r\n  const [peopleTableColumnHeaders, setPeopleTableColumnHeaders] = useState([]);\r\n  const [peoplePage, setPeoplePage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function fetchPeopleList(x) {\r\n    let people = await fetch(`https://swapi.dev/api/people/?page=${x}`);\r\n    let peopleJSON = await people.json();\r\n    return peopleJSON;\r\n  }\r\n  async function fetchPeopleListSchema() {\r\n    const peopleSchemaResult = await fetch(\r\n      \"https://swapi.dev/api/people/schema\"\r\n    ).then((response) => response.json());\r\n    const peopleTableColumnHeadersResult = peopleSchemaResult.required.map(\r\n      (item) => {\r\n        return {\r\n          Header: item,\r\n          accessor: item,\r\n        };\r\n      }\r\n    );\r\n    return peopleTableColumnHeadersResult;\r\n  }\r\n\r\n  const peopleColumnHeaders = [\r\n    {\r\n      Header: \"Name\",\r\n      accessor: \"name\",\r\n    },\r\n    {\r\n      Header: \"Height\",\r\n      accessor: \"height\",\r\n    },\r\n    {\r\n      Header: \"Mass\",\r\n      accessor: \"mass\",\r\n    },\r\n    {\r\n      Header: \"Hair Color\",\r\n      accessor: \"hair_color\",\r\n    },\r\n    {\r\n      Header: \"Eye Color\",\r\n      accessor: \"eye_color\",\r\n    },\r\n    {\r\n      Header: \"Birth Year\",\r\n      accessor: \"birth_year\",\r\n    },\r\n    {\r\n      Header: \"Gender\",\r\n      accessor: \"gender\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchPeopleList(peoplePage)\r\n      .then((result) => setPeopleList(result))\r\n      .then(() => setLoading(false));\r\n    // fetchPeopleListSchema().then((result) =>\r\n    //   setPeopleTableColumnHeaders(result)\r\n    setPeopleTableColumnHeaders(peopleColumnHeaders);\r\n  }, []);\r\n\r\n  const handleNextPageClick = async () => {\r\n    if (peoplePage <= 8) {\r\n      setLoading(true);\r\n      const newPage = peoplePage + 1;\r\n      fetchPeopleList(newPage)\r\n        .then((result) => setPeopleList(result))\r\n        .then(() => setLoading(false));\r\n      setPeoplePage(newPage);\r\n    }\r\n  };\r\n\r\n  const handleBackPageClick = () => {\r\n    if (peoplePage >= 2) {\r\n      setLoading(true);\r\n      const newPage = peoplePage - 1;\r\n      fetchPeopleList(newPage)\r\n        .then((result) => setPeopleList(result))\r\n        .then(() => setLoading(false));\r\n      setPeoplePage(newPage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FlexBox\r\n        justifyContent={FlexBoxJustifyContent.Center}\r\n        wrap={FlexBoxWrap.Wrap}\r\n        style={spacing.sapUiContentPadding}\r\n      >\r\n        <Title level=\"H1\">People</Title>\r\n      </FlexBox>\r\n\r\n      <FlexBox\r\n        justifyContent={FlexBoxJustifyContent.Center}\r\n        wrap={FlexBoxWrap.Wrap}\r\n        style={spacing.sapUiContentPadding}\r\n      >\r\n        <Card\r\n          heading=\"People\"\r\n          style={{ maxWidth: \"1200px\", ...spacing.sapUiContentPadding }}\r\n          avatar={<Icon name=\"table-view\" />}\r\n        >\r\n          <AnalyticalTable\r\n            data={peopleList.results}\r\n            columns={peopleTableColumnHeaders}\r\n            visibleRows={10}\r\n            scaleWidthMode={\"Grow\"}\r\n            loading={loading}\r\n          />\r\n          <FlexBox\r\n            justifyContent={FlexBoxJustifyContent.Center}\r\n            wrap={FlexBoxWrap.Wrap}\r\n            style={spacing.sapUiContentPadding}\r\n          >\r\n            <Button\r\n              icon=\"arrow-left\"\r\n              onClick={handleBackPageClick}\r\n              disabled={peopleList.previous == null ? true : false}\r\n            >\r\n              Back\r\n            </Button>\r\n            <Button\r\n              icon=\"arrow-right\"\r\n              onClick={handleNextPageClick}\r\n              disabled={peopleList.next == null ? true : false}\r\n            >\r\n              Next\r\n            </Button>\r\n          </FlexBox>\r\n        </Card>\r\n      </FlexBox>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Avatar,\r\n  List,\r\n  StandardListItem,\r\n  Title,\r\n  FlexBox,\r\n  FlexBoxJustifyContent,\r\n  FlexBoxWrap,\r\n} from \"@ui5/webcomponents-react\";\r\nimport { spacing } from \"@ui5/webcomponents-react-base\";\r\nimport { Spinner } from \"@ui5/webcomponents-react/lib/Spinner\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/horizontal-bar-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/line-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/list.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/table-view.js\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-react/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\n\r\nexport function Species() {\r\n  const [speciesList, setSpeciesList] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function getListCount(data) {\r\n    let initialList = await fetch(`https://swapi.dev/api/${data}/?page=1`);\r\n    let initialListJSON = await initialList.json();\r\n    return initialListJSON.count;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchList = async function () {\r\n      setLoading(true);\r\n      const max = await getListCount(\"species\");\r\n      const list = [];\r\n      const requests = [];\r\n      for (let i = 1; i <= max; i++) {\r\n        const url = `https://swapi.dev/api/species/${i}/`;\r\n        const prom = fetch(url).then((r) => r.json());\r\n\r\n        requests.push(prom);\r\n      }\r\n      return new Promise((resolve) => {\r\n        Promise.all(requests)\r\n          .then((proms) => proms.forEach((p) => list.push(p)))\r\n          .then(() => resolve(list));\r\n      });\r\n    };\r\n    fetchList()\r\n      .then((result) => setSpeciesList(result))\r\n      .then(() => setLoading(false));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <FlexBox\r\n        justifyContent={FlexBoxJustifyContent.Center}\r\n        wrap={FlexBoxWrap.Wrap}\r\n        style={spacing.sapUiContentPadding}\r\n      >\r\n        <Title level=\"H1\">Species</Title>\r\n      </FlexBox>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <FlexBox\r\n          justifyContent={FlexBoxJustifyContent.Center}\r\n          wrap={FlexBoxWrap.Wrap}\r\n          style={spacing.sapUiContentPadding}\r\n        >\r\n          {speciesList.map((species, i) => {\r\n            return (\r\n              <Card\r\n                key={i}\r\n                avatar={\r\n                  <Avatar\r\n                    backgroundColor=\"Accent6\"\r\n                    icon=\"person-placeholder\"\r\n                    imageFitType=\"Cover\"\r\n                    shape=\"Circle\"\r\n                    size=\"S\"\r\n                  />\r\n                }\r\n                headerInteractive={false}\r\n                heading={speciesList[i].name}\r\n                onHeaderClick={function noRefCheck() {}}\r\n                status={`${i + 1} of ${speciesList.length}`}\r\n                style={{\r\n                  width: \"300px\",\r\n                  padding: \"10px\",\r\n                }}\r\n                subheading=\"Species\"\r\n              >\r\n                <List\r\n                  busy={false}\r\n                  infiniteScroll={false}\r\n                  inset={false}\r\n                  mode=\"None\"\r\n                  separators=\"All\"\r\n                >\r\n                  <StandardListItem\r\n                    description=\"Classification\"\r\n                    iconEnd={false}\r\n                    infoState=\"None\"\r\n                    selected={false}\r\n                    type=\"Active\"\r\n                  >\r\n                    {speciesList[i].classification}\r\n                  </StandardListItem>\r\n                  <StandardListItem\r\n                    description=\"Languange\"\r\n                    iconEnd={false}\r\n                    infoState=\"None\"\r\n                    selected={false}\r\n                    type=\"Active\"\r\n                  >\r\n                    {speciesList[i].language}\r\n                  </StandardListItem>\r\n                  <StandardListItem\r\n                    description=\"Average Lifespan\"\r\n                    iconEnd={false}\r\n                    infoState=\"None\"\r\n                    selected={false}\r\n                    type=\"Active\"\r\n                  >\r\n                    {speciesList[i].average_lifespan}\r\n                  </StandardListItem>\r\n                </List>\r\n              </Card>\r\n            );\r\n          })}\r\n        </FlexBox>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Text,\r\n  List,\r\n  Title,\r\n  FlexBox,\r\n  FlexBoxJustifyContent,\r\n  FlexBoxWrap,\r\n  Icon,\r\n} from \"@ui5/webcomponents-react\";\r\nimport { spacing } from \"@ui5/webcomponents-react-base\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/horizontal-bar-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/line-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/list.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/table-view.js\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\nimport { NotificationListItem } from \"@ui5/webcomponents-react/lib/NotificationListItem\";\r\nimport { Spinner } from \"@ui5/webcomponents-react/lib/Spinner\";\r\n\r\nexport function Films() {\r\n  const [filmList, setFilmList] = useState([]);\r\n  const [filmTableColumnHeaders, setFilmTableColumnHeaders] = useState([]);\r\n  const [filmPage, setFilmPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  var filmListResults = filmList.results || [];\r\n\r\n  async function fetchfilmList(x) {\r\n    let film = await fetch(`https://swapi.dev/api/films/?page=${x}`);\r\n    let filmJSON = await film.json();\r\n    setLoading(false);\r\n    return filmJSON;\r\n  }\r\n  async function fetchfilmListSchema() {\r\n    const filmSchemaResult = await fetch(\r\n      \"https://swapi.dev/api/films/schema\"\r\n    ).then((response) => response.json());\r\n    const filmTableColumnHeadersResult = filmSchemaResult.required.map(\r\n      (item) => {\r\n        return {\r\n          Header: item,\r\n          accessor: item,\r\n        };\r\n      }\r\n    );\r\n    return filmTableColumnHeadersResult;\r\n  }\r\n\r\n  const filmTableHeaders = [\r\n    {\r\n      Header: \"Title\",\r\n      accessor: \"title\",\r\n    },\r\n    {\r\n      Header: \"Episode\",\r\n      accessor: \"episode_id\",\r\n    },\r\n    {\r\n      Header: \"Opening Crawl\",\r\n      accessor: \"opening_crawl\",\r\n    },\r\n    {\r\n      Header: \"Director\",\r\n      accessor: \"director\",\r\n    },\r\n    {\r\n      Header: \"Producer\",\r\n      accessor: \"producer\",\r\n    },\r\n    {\r\n      Header: \"Release Date\",\r\n      accessor: \"release_date\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchfilmList(filmPage)\r\n      .then((result) => setFilmList(result))\r\n      .then(() => setLoading(false));\r\n    // fetchfilmListSchema().then((result) => setFilmTableColumnHeaders(result));\r\n    setFilmTableColumnHeaders(filmTableHeaders);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <FlexBox\r\n        justifyContent={FlexBoxJustifyContent.Center}\r\n        wrap={FlexBoxWrap.Wrap}\r\n        style={spacing.sapUiContentPadding}\r\n      >\r\n        <Title level=\"H1\">Films</Title>\r\n      </FlexBox>\r\n      {loading ? (\r\n        <FlexBox\r\n          justifyContent={FlexBoxJustifyContent.Center}\r\n          wrap={FlexBoxWrap.Wrap}\r\n          style={spacing.sapUiContentPadding}\r\n        >\r\n          <Spinner style={{ justifyContent: \"center\", alignItems: \"center\" }} />\r\n        </FlexBox>\r\n      ) : (\r\n        <FlexBox\r\n          justifyContent={FlexBoxJustifyContent.Center}\r\n          wrap={FlexBoxWrap.Wrap}\r\n          style={spacing.sapUiContentPadding}\r\n        >\r\n          <Card\r\n            heading=\"Films\"\r\n            style={{ maxWidth: \"1200px\", ...spacing.sapUiContentPadding }}\r\n            avatar={<Icon name=\"table-view\" />}\r\n          >\r\n            <List>\r\n              {filmListResults.map((film, i) => {\r\n                return (\r\n                  <NotificationListItem\r\n                    key={i}\r\n                    heading={filmListResults[i].title}\r\n                    footnotes={<Text>{filmListResults[i].release_date}</Text>}\r\n                  >\r\n                    {filmListResults[i].opening_crawl}\r\n                  </NotificationListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          </Card>\r\n        </FlexBox>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Text,\r\n  Title,\r\n  FlexBox,\r\n  FlexBoxJustifyContent,\r\n  FlexBoxWrap,\r\n  AnalyticalTable,\r\n  Icon,\r\n  Button,\r\n} from \"@ui5/webcomponents-react\";\r\nimport { spacing } from \"@ui5/webcomponents-react-base\";\r\nimport {\r\n  BarChart,\r\n  LineChart,\r\n  MicroBarChart,\r\n} from \"@ui5/webcomponents-react-charts\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/horizontal-bar-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/line-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/list.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/table-view.js\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-react/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\n\r\nexport function Planets() {\r\n  const [planetsList, setPlanetsList] = useState([]);\r\n  const [planetsTableColumnHeaders, setPlanetsTableColumnHeaders] = useState(\r\n    []\r\n  );\r\n  const [planetsPage, setPlanetsPage] = useState(1);\r\n  const [toggleCharts, setToggleCharts] = useState(\"lineChart\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function fetchplanetsList(x) {\r\n    let planets = await fetch(`https://swapi.dev/api/planets/?page=${x}`);\r\n    let planetsJSON = await planets.json();\r\n    return planetsJSON;\r\n  }\r\n\r\n  async function getListCount(data) {\r\n    let initialList = await fetch(`https://swapi.dev/api/${data}/?page=1`);\r\n    let initialListJSON = await initialList.json();\r\n    return initialListJSON.count;\r\n  }\r\n\r\n  async function fetchplanetsListSchema() {\r\n    const planetsSchemaResult = await fetch(\r\n      \"https://swapi.dev/api/planets/schema\"\r\n    ).then((response) => response.json());\r\n    const planetsTableColumnHeadersResult = planetsSchemaResult.required.map(\r\n      (item) => {\r\n        return {\r\n          Header: item,\r\n          accessor: item,\r\n        };\r\n      }\r\n    );\r\n    return planetsTableColumnHeadersResult;\r\n  }\r\n\r\n  const platentsTableHeaders = [\r\n    {\r\n      Header: \"Name\",\r\n      accessor: \"name\",\r\n    },\r\n    {\r\n      Header: \"Rotation Period\",\r\n      accessor: \"rotation_period\",\r\n    },\r\n    {\r\n      Header: \"Orbital Period\",\r\n      accessor: \"orbital_period\",\r\n    },\r\n    {\r\n      Header: \"Diameter\",\r\n      accessor: \"diameter\",\r\n    },\r\n    {\r\n      Header: \"Climate\",\r\n      accessor: \"climate\",\r\n    },\r\n    {\r\n      Header: \"Gravity\",\r\n      accessor: \"gravity\",\r\n    },\r\n    {\r\n      Header: \"Terrain\",\r\n      accessor: \"terrain\",\r\n    },\r\n    {\r\n      Header: \"Surface Water\",\r\n      accessor: \"surface_water\",\r\n    },\r\n    {\r\n      Header: \"Population\",\r\n      accessor: \"population\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchList = async function () {\r\n      setLoading(true);\r\n      const max = await getListCount(\"planets\");\r\n      const list = [];\r\n      const requests = [];\r\n      for (let i = 1; i <= max; i++) {\r\n        const url = `https://swapi.dev/api/planets/${i}/`;\r\n        const prom = fetch(url).then((r) => r.json());\r\n\r\n        requests.push(prom);\r\n      }\r\n      return new Promise((resolve) => {\r\n        Promise.all(requests)\r\n          .then((proms) => proms.forEach((p) => list.push(p)))\r\n          .then(() => resolve(list));\r\n      });\r\n    };\r\n    // fetchplanetsListSchema().then((result) =>\r\n    //   setPlanetsTableColumnHeaders(result)\r\n    // );\r\n    setPlanetsTableColumnHeaders(platentsTableHeaders);\r\n    fetchList()\r\n      .then((result) => setPlanetsList(result))\r\n      .then(() => setLoading(false));\r\n  }, []);\r\n\r\n  const sortedPlanetsPopulationList = [...planetsList];\r\n  sortedPlanetsPopulationList.sort(\r\n    (a, b) => parseFloat(a.population) - parseFloat(b.population)\r\n  );\r\n\r\n  const sortedPlanetsDiameterList = [...planetsList];\r\n  sortedPlanetsDiameterList.sort(\r\n    (a, b) => parseFloat(b.diameter) - parseFloat(a.diameter)\r\n  );\r\n\r\n  const handleNextPageClick = async () => {\r\n    if (planetsPage <= 8) {\r\n      setLoading(true);\r\n      const newPage = planetsPage + 1;\r\n      fetchplanetsList(newPage).then((result) => setPlanetsList(result));\r\n      setPlanetsPage(newPage);\r\n    }\r\n  };\r\n\r\n  const handleBackPageClick = () => {\r\n    if (planetsPage >= 2) {\r\n      const newPage = planetsPage - 1;\r\n      fetchplanetsList(newPage).then((result) => setPlanetsList(result));\r\n      setPlanetsPage(newPage);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleHeaderClick = () => {\r\n    if (toggleCharts === \"lineChart\") {\r\n      setToggleCharts(\"barChart\");\r\n    } else {\r\n      setToggleCharts(\"lineChart\");\r\n    }\r\n  };\r\n\r\n  const contentTitle =\r\n    toggleCharts === \"lineChart\" ? \"Line Chart\" : \"Bar Chart\";\r\n  const switchToChart =\r\n    toggleCharts === \"lineChart\" ? \"Bar Chart\" : \"Line Chart\";\r\n\r\n  return (\r\n    <FlexBox\r\n      justifyContent={FlexBoxJustifyContent.Center}\r\n      wrap={FlexBoxWrap.Wrap}\r\n      style={spacing.sapUiContentPadding}\r\n    >\r\n      <Title level=\"H1\">Planets</Title>\r\n      <Card\r\n        avatar={\r\n          <Icon\r\n            name={\r\n              toggleCharts === \"lineChart\"\r\n                ? \"line-chart\"\r\n                : \"horizontal-bar-chart\"\r\n            }\r\n          />\r\n        }\r\n        heading=\"Planet Population\"\r\n        style={spacing.sapUiContentPadding}\r\n        headerInteractive\r\n        onHeaderClick={handleHeaderClick}\r\n        subheading={`Click here to switch to ${switchToChart}`}\r\n      >\r\n        <Text style={spacing.sapUiContentPadding}>{contentTitle}</Text>\r\n        {toggleCharts === \"lineChart\" ? (\r\n          <LineChart\r\n            dimensions={[{ accessor: \"name\" }]}\r\n            measures={[{ accessor: \"population\", label: \"Population\" }]}\r\n            dataset={sortedPlanetsPopulationList.slice(0, 10)}\r\n            loading={loading}\r\n          />\r\n        ) : (\r\n          <BarChart\r\n            dimensions={[{ accessor: \"name\" }]}\r\n            measures={[{ accessor: \"population\", label: \"Population\" }]}\r\n            dataset={sortedPlanetsPopulationList.slice(0, 10)}\r\n            loading={loading}\r\n          />\r\n        )}\r\n      </Card>\r\n\r\n      <Card\r\n        avatar={<Icon name={\"horizontal-bar-chart-2\"} />}\r\n        heading=\"Planet Diameter\"\r\n        style={{ ...spacing.sapUiContentPadding }}\r\n        //headerInteractive\r\n        subheading={\"\"}\r\n      >\r\n        <Text style={spacing.sapUiContentPadding}>MicroBarChart</Text>\r\n        <MicroBarChart\r\n          dimension={{ accessor: \"name\" }}\r\n          measure={{ accessor: \"diameter\" }}\r\n          dataset={sortedPlanetsDiameterList.slice(0, 10)}\r\n          loading={loading}\r\n        />\r\n      </Card>\r\n\r\n      <Card\r\n        heading=\"Planets\"\r\n        style={spacing.sapUiContentPadding}\r\n        avatar={<Icon name=\"table-view\" />}\r\n      >\r\n        <AnalyticalTable\r\n          data={planetsList}\r\n          columns={planetsTableColumnHeaders}\r\n          visibleRows={10}\r\n          scaleWidthMode={\"Grow\"}\r\n          loading={loading}\r\n        />\r\n        <FlexBox\r\n          justifyContent={FlexBoxJustifyContent.Center}\r\n          wrap={FlexBoxWrap.Wrap}\r\n          style={spacing.sapUiContentPadding}\r\n        >\r\n          <Button\r\n            icon=\"arrow-left\"\r\n            onClick={handleBackPageClick}\r\n            disabled={planetsList.previous == null ? true : false}\r\n          >\r\n            Back\r\n          </Button>\r\n          <Button\r\n            icon=\"arrow-right\"\r\n            onClick={handleNextPageClick}\r\n            disabled={planetsList.next == null ? true : false}\r\n          >\r\n            Next\r\n          </Button>\r\n        </FlexBox>\r\n      </Card>\r\n    </FlexBox>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  Title,\r\n  FlexBox,\r\n  FlexBoxJustifyContent,\r\n  FlexBoxWrap,\r\n  Label,\r\n} from \"@ui5/webcomponents-react\";\r\nimport { spacing } from \"@ui5/webcomponents-react-base\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/horizontal-bar-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/line-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/list.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/table-view.js\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-react/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\nimport { Carousel } from \"@ui5/webcomponents-react/lib/Carousel\";\r\nimport { Spinner } from \"@ui5/webcomponents-react/lib/Spinner\";\r\nimport { ObjectPage } from \"@ui5/webcomponents-react/lib/ObjectPage\";\r\nimport { ObjectPageSection } from \"@ui5/webcomponents-react/lib/ObjectPageSection\";\r\n\r\nexport function Vehicles() {\r\n  const [vehiclesList, setVehiclesList] = useState([]);\r\n  const [vehiclesTableColumnHeaders, setVehiclesTableColumnHeaders] = useState(\r\n    []\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function fetchvehiclesList(x) {\r\n    let vehicles = await fetch(`https://swapi.dev/api/vehicles/?page=${x}`);\r\n    let vehiclesJSON = await vehicles.json();\r\n    return vehiclesJSON;\r\n  }\r\n\r\n  async function getListCount(data) {\r\n    let initialList = await fetch(`https://swapi.dev/api/${data}/?page=1`);\r\n    let initialListJSON = await initialList.json();\r\n    return initialListJSON.count;\r\n  }\r\n\r\n  async function fetchvehiclesListSchema() {\r\n    const vehiclesSchemaResult = await fetch(\r\n      \"https://swapi.dev/api/vehicles/schema\"\r\n    ).then((response) => response.json());\r\n    const vehiclesTableColumnHeadersResult = vehiclesSchemaResult.required.map(\r\n      (item) => {\r\n        return {\r\n          Header: item,\r\n          accessor: item,\r\n        };\r\n      }\r\n    );\r\n    return vehiclesTableColumnHeadersResult;\r\n  }\r\n\r\n  const removeJunkFromList = function (array) {\r\n    const list = [];\r\n    for (let i = 1; i <= array.length; i++) {\r\n      if (array[i] && array[i].name) {\r\n        list.push(array[i]);\r\n      }\r\n    }\r\n    setVehiclesList(list);\r\n    setLoading(false);\r\n  };\r\n\r\n  const vehicleTableHeaders = [\r\n    {\r\n      Header: \"Name\",\r\n      accessor: \"name\",\r\n    },\r\n    {\r\n      Header: \"Model\",\r\n      accessor: \"model\",\r\n    },\r\n    {\r\n      Header: \"Manufacturer\",\r\n      accessor: \"manufacturer\",\r\n    },\r\n    {\r\n      Header: \"Cost\",\r\n      accessor: \"cost_in_credits\",\r\n    },\r\n    {\r\n      Header: \"Length\",\r\n      accessor: \"length\",\r\n    },\r\n    {\r\n      Header: \"Max Speed\",\r\n      accessor: \"max_atmosphering_speed\",\r\n    },\r\n    {\r\n      Header: \"Crew\",\r\n      accessor: \"crew\",\r\n    },\r\n    {\r\n      Header: \"Passengers\",\r\n      accessor: \"passengers\",\r\n    },\r\n    {\r\n      Header: \"Cargo Capacity\",\r\n      accessor: \"cargo_capacity\",\r\n    },\r\n    {\r\n      Header: \"Consumablesme\",\r\n      accessor: \"consumables\",\r\n    },\r\n    {\r\n      Header: \"Vehicle Class\",\r\n      accessor: \"vehicle_class\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchList = async function () {\r\n      setLoading(true);\r\n      const max = await getListCount(\"vehicles\");\r\n      const list = [];\r\n      const requests = [];\r\n      for (let i = 1; i <= max; i++) {\r\n        const url = `https://swapi.dev/api/vehicles/${i}/`;\r\n        const prom = fetch(url).then((r) => r.json());\r\n\r\n        requests.push(prom);\r\n      }\r\n      //setLoading(false);\r\n      return new Promise((resolve) => {\r\n        Promise.all(requests)\r\n          .then((proms) => proms.forEach((p) => list.push(p)))\r\n          .then(() => resolve(list));\r\n      });\r\n    };\r\n    // fetchvehiclesListSchema().then((result) =>\r\n    //   setVehiclesTableColumnHeaders(result)\r\n    // );\r\n    setVehiclesTableColumnHeaders(vehicleTableHeaders);\r\n    fetchList().then((result) => removeJunkFromList(result));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <FlexBox\r\n        justifyContent={FlexBoxJustifyContent.Center}\r\n        wrap={FlexBoxWrap.Wrap}\r\n        style={spacing.sapUiContentPadding}\r\n      >\r\n        <Title level=\"H1\">Vehicles</Title>\r\n      </FlexBox>\r\n      {loading ? (\r\n        <FlexBox\r\n          justifyContent={FlexBoxJustifyContent.Center}\r\n          wrap={FlexBoxWrap.Wrap}\r\n          style={spacing.sapUiContentPadding}\r\n        >\r\n          <Spinner style={{ justifyContent: \"center\", alignItems: \"center\" }} />\r\n        </FlexBox>\r\n      ) : (\r\n        <FlexBox\r\n          justifyContent={FlexBoxJustifyContent.Center}\r\n          wrap={FlexBoxWrap.Wrap}\r\n          style={spacing.sapUiContentPadding}\r\n        >\r\n          <Carousel\r\n            arrowsPlacement=\"Content\"\r\n            cyclic={false}\r\n            hideNavigation={false}\r\n            infiniteScrollOffset={0}\r\n            itemsPerPageL={1}\r\n            itemsPerPageM={1}\r\n            itemsPerPageS={1}\r\n            onNavigate={function noRefCheck() {}}\r\n            selectedIndex={0}\r\n            loading={loading}\r\n          >\r\n            {vehiclesList.map((vehicles, i) => {\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  style={{\r\n                    height: \"calc(100% - 1rem)\",\r\n                    marginTop: \"2rem\",\r\n                    position: \"relative\",\r\n                    width: \"calc(100% - 10rem)\",\r\n                  }}\r\n                >\r\n                  <ObjectPage\r\n                    headerContent={\r\n                      <div>\r\n                        <div\r\n                          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                        >\r\n                          <Text renderWhitespace={false} wrapping>\r\n                            Manufacturer: {vehiclesList[i].manufacturer}\r\n                          </Text>\r\n                          <Text renderWhitespace={false} wrapping>\r\n                            Cost: {vehiclesList[i].cost_in_credits} Credits\r\n                          </Text>\r\n                        </div>\r\n                        <div\r\n                          style={{ display: \"flex\", flexDirection: \"column\" }}\r\n                        ></div>\r\n                      </div>\r\n                    }\r\n                    mode=\"Default\"\r\n                    style={{\r\n                      height: \"500px\",\r\n                    }}\r\n                    subTitle={vehiclesList[i].model}\r\n                    title={vehiclesList[i].name}\r\n                  >\r\n                    <ObjectPageSection\r\n                      id=\"0\"\r\n                      isSection\r\n                      title=\"Capacity\"\r\n                      titleUppercase\r\n                    >\r\n                      <Label\r\n                        required={false}\r\n                        showColon={false}\r\n                        wrap={false}\r\n                        wrapping\r\n                      >\r\n                        Cargo: {vehiclesList[i].cargo_capacity}\r\n                      </Label>\r\n                      <br></br>\r\n                      <Label required={false} showColon={false} wrap={false}>\r\n                        Consumables: {vehiclesList[i].consumables}\r\n                      </Label>\r\n                      <br></br>\r\n                      <Label required={false} showColon={false} wrap={false}>\r\n                        Crew: {vehiclesList[i].crew}\r\n                      </Label>\r\n                      <br></br>\r\n                      <Label required={false} showColon={false} wrap={false}>\r\n                        Passengers: {vehiclesList[i].passengers}\r\n                      </Label>\r\n                    </ObjectPageSection>\r\n                    <ObjectPageSection\r\n                      id=\"1\"\r\n                      isSection\r\n                      title=\"Specifications\"\r\n                      titleUppercase\r\n                    >\r\n                      <Label required={false} showColon={false} wrap={false}>\r\n                        Max Speed: {vehiclesList[i].max_atmosphering_speed}\r\n                      </Label>\r\n                      <br></br>\r\n                      <Label required={false} showColon={false} wrap={false}>\r\n                        Length: {vehiclesList[i].length}\r\n                      </Label>\r\n                    </ObjectPageSection>\r\n                    <ObjectPageSection\r\n                      id=\"2\"\r\n                      isSection\r\n                      title=\"Class\"\r\n                      titleUppercase\r\n                    >\r\n                      <Label required={false} showColon={false} wrap={false}>\r\n                        Class: {vehiclesList[i].vehicle_class}\r\n                      </Label>\r\n                    </ObjectPageSection>\r\n                  </ObjectPage>\r\n                </div>\r\n              );\r\n            })}\r\n          </Carousel>\r\n        </FlexBox>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Title,\r\n  FlexBox,\r\n  FlexBoxJustifyContent,\r\n  FlexBoxWrap,\r\n} from \"@ui5/webcomponents-react\";\r\nimport { spacing } from \"@ui5/webcomponents-react-base\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/horizontal-bar-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/line-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/list.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/table-view.js\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-react/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\nimport { Spinner } from \"@ui5/webcomponents-react/lib/Spinner\";\r\nimport { Panel } from \"@ui5/webcomponents-react/lib/Panel\";\r\n\r\nexport function Starships() {\r\n  const [starshipsList, setStarshipsList] = useState([]);\r\n  const [starshipsTableColumnHeaders, setStarshipsTableColumnHeaders] =\r\n    useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  async function fetchstarshipsList(x) {\r\n    let starships = await fetch(`https://swapi.dev/api/starships/?page=${x}`);\r\n    let starshipsJSON = await starships.json();\r\n    return starshipsJSON;\r\n  }\r\n\r\n  async function getListCount(data) {\r\n    let initialList = await fetch(`https://swapi.dev/api/${data}/?page=1`);\r\n    let initialListJSON = await initialList.json();\r\n    return initialListJSON.count;\r\n  }\r\n\r\n  async function fetchstarshipsListSchema() {\r\n    const starshipsSchemaResult = await fetch(\r\n      \"https://swapi.dev/api/starships/schema\"\r\n    ).then((response) => response.json());\r\n    const starshipsTableColumnHeadersResult =\r\n      starshipsSchemaResult.required.map((item) => {\r\n        return {\r\n          Header: item,\r\n          accessor: item,\r\n        };\r\n      });\r\n    return starshipsTableColumnHeadersResult;\r\n  }\r\n\r\n  const removeJunkFromList = function (array) {\r\n    const list = [];\r\n    for (let i = 1; i <= array.length; i++) {\r\n      if (array[i] && array[i].name) {\r\n        list.push(array[i]);\r\n      }\r\n    }\r\n    setStarshipsList(list);\r\n    setLoading(false);\r\n  };\r\n\r\n  const starshipTableHeaders = [\r\n    {\r\n      Header: \"Name\",\r\n      accessor: \"name\",\r\n    },\r\n    {\r\n      Header: \"Model\",\r\n      accessor: \"model\",\r\n    },\r\n    {\r\n      Header: \"Manufacturer\",\r\n      accessor: \"manufacturer\",\r\n    },\r\n    {\r\n      Header: \"Cost\",\r\n      accessor: \"cost_in_credits\",\r\n    },\r\n    {\r\n      Header: \"Length\",\r\n      accessor: \"length\",\r\n    },\r\n    {\r\n      Header: \"Max Speed\",\r\n      accessor: \"max_atmosphering_speed\",\r\n    },\r\n    {\r\n      Header: \"Crew\",\r\n      accessor: \"crew\",\r\n    },\r\n    {\r\n      Header: \"Passengers\",\r\n      accessor: \"passengers\",\r\n    },\r\n    {\r\n      Header: \"Cargo Capacity\",\r\n      accessor: \"cargo_capacity\",\r\n    },\r\n    {\r\n      Header: \"Consumables\",\r\n      accessor: \"consumables\",\r\n    },\r\n    {\r\n      Header: \"Hyperdrive Rating\",\r\n      accessor: \"hyperdrive_rating\",\r\n    },\r\n    {\r\n      Header: \"MGLT\",\r\n      accessor: \"MGLT\",\r\n    },\r\n    {\r\n      Header: \"Starship Class\",\r\n      accessor: \"starship_class\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetchList = async function () {\r\n      setLoading(true);\r\n      const max = await getListCount(\"starships\");\r\n      const list = [];\r\n      const requests = [];\r\n      for (let i = 1; i <= 11; i++) {\r\n        const url = `https://swapi.dev/api/starships/${i}/`;\r\n        const prom = fetch(url).then((r) => r.json());\r\n\r\n        requests.push(prom);\r\n      }\r\n      //https://swapi.dev/api/starships/12 was cdgiving cors error...\r\n      for (let i = 13; i <= max; i++) {\r\n        const url = `https://swapi.dev/api/starships/${i}/`;\r\n        const prom = fetch(url).then((r) => r.json());\r\n\r\n        requests.push(prom);\r\n      }\r\n      return new Promise((resolve) => {\r\n        Promise.all(requests)\r\n          .then((proms) => proms.forEach((p) => list.push(p)))\r\n          .then(() => resolve(list));\r\n      });\r\n    };\r\n    // fetchstarshipsListSchema().then((result) =>\r\n    //   setStarshipsTableColumnHeaders(result)\r\n    // );\r\n    setStarshipsTableColumnHeaders(starshipTableHeaders);\r\n    fetchList().then((result) => removeJunkFromList(result));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <FlexBox\r\n        justifyContent={FlexBoxJustifyContent.Center}\r\n        wrap={FlexBoxWrap.Wrap}\r\n        style={spacing.sapUiContentPadding}\r\n      >\r\n        <Title level=\"H1\">Starships</Title>\r\n      </FlexBox>\r\n      {loading ? (\r\n        <FlexBox\r\n          justifyContent={FlexBoxJustifyContent.Center}\r\n          wrap={FlexBoxWrap.Wrap}\r\n          style={spacing.sapUiContentPadding}\r\n        >\r\n          <Spinner style={{ justifyContent: \"center\", alignItems: \"center\" }} />\r\n        </FlexBox>\r\n      ) : (\r\n        <FlexBox\r\n          justifyContent={FlexBoxJustifyContent.Center}\r\n          wrap={FlexBoxWrap.Wrap}\r\n          style={spacing.sapUiContentPadding}\r\n        >\r\n          {starshipsList.map((starships, i) => {\r\n            return (\r\n              <div\r\n                key={i}\r\n                style={{\r\n                  height: \"calc(100% - 1rem)\",\r\n                  marginTop: \"2rem\",\r\n                  position: \"relative\",\r\n                  width: \"calc(100% - 10rem)\",\r\n                }}\r\n              >\r\n                <Panel\r\n                  accessibleRole=\"Form\"\r\n                  collapsed={true}\r\n                  fixed={false}\r\n                  header={null}\r\n                  headerLevel=\"H2\"\r\n                  headerText={starshipsList[i].name}\r\n                >\r\n                  Model: {starshipsList[i].model}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Manufacturer: {starshipsList[i].manufacturer}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Cost: {starshipsList[i].cost_in_credits}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Length: {starshipsList[i].length}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Max Speed: {starshipsList[i].max_atmosphering_speed}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Crew Size: {starshipsList[i].crew}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Passenger Capacity: {starshipsList[i].passengers}\r\n                  <br></br>\r\n                  <br></br>\r\n                  Cargo Capcity: {starshipsList[i].cargo_capacity}\r\n                </Panel>\r\n              </div>\r\n            );\r\n          })}\r\n        </FlexBox>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  FlexBox,\r\n  FlexBoxJustifyContent,\r\n  FlexBoxWrap,\r\n  ProductSwitchItem,\r\n} from \"@ui5/webcomponents-react\";\r\nimport { spacing } from \"@ui5/webcomponents-react-base\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/horizontal-bar-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/line-chart.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/list.js\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/table-view.js\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport { ProductSwitch } from \"@ui5/webcomponents-react/lib/ProductSwitch\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\n\r\nexport function Home() {\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <FlexBox\r\n      justifyContent={FlexBoxJustifyContent.Center}\r\n      wrap={FlexBoxWrap.Wrap}\r\n      style={spacing.sapUiContentPadding}\r\n    >\r\n      <ProductSwitch>\r\n        <ProductSwitchItem\r\n          heading=\"Films\"\r\n          icon=\"attachment-video\"\r\n          subtitle=\"UI5 Notification Item List\"\r\n          target=\"_self\"\r\n          targetSrc=\"#/films\"\r\n        ></ProductSwitchItem>\r\n        <ProductSwitchItem\r\n          heading=\"People\"\r\n          icon=\"company-view\"\r\n          subtitle=\"UI5 Analytical Table\"\r\n          target=\"_self\"\r\n          targetSrc=\"#/people\"\r\n        />\r\n        <ProductSwitchItem\r\n          heading=\"Species\"\r\n          icon=\"work-history\"\r\n          subtitle=\"UI5 Card\"\r\n          target=\"_self\"\r\n          targetSrc=\"#/species\"\r\n        />\r\n        <ProductSwitchItem\r\n          heading=\"Planets\"\r\n          icon=\"world\"\r\n          subtitle=\"UI5 Line Chart, Bar Chart, Micro Bar Chart\"\r\n          target=\"_self\"\r\n          targetSrc=\"#/planets\"\r\n        />\r\n        <ProductSwitchItem\r\n          heading=\"Vehicles\"\r\n          icon=\"shipping-status\"\r\n          subtitle=\"UI5 Carousel and Object Page\"\r\n          target=\"_self\"\r\n          targetSrc=\"#/vehicles\"\r\n        />\r\n\r\n        <ProductSwitchItem\r\n          heading=\"Starships\"\r\n          icon=\"flight\"\r\n          subtitle=\"UI5 Panel\"\r\n          target=\"_self\"\r\n          targetSrc=\"#/starships\"\r\n        />\r\n      </ProductSwitch>\r\n    </FlexBox>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ShellBar, Avatar, StandardListItem } from \"@ui5/webcomponents-react\";\r\nimport \"@ui5/webcomponents-icons/dist/icons/add.js\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { People } from \"./pages/people.component\";\r\nimport { Species } from \"./pages/species.component\";\r\nimport { Films } from \"./pages/films.component\";\r\nimport { Planets } from \"./pages/planets.component\";\r\nimport { Vehicles } from \"./pages/vehicles.component\";\r\nimport { Starships } from \"./pages/starships.component\";\r\nimport { Home } from \"./pages/home.component\";\r\nimport \"@ui5/webcomponents/dist/Assets.js\";\r\nimport \"@ui5/webcomponents-fiori/dist/Assets.js\"; // Only if using the @ui5/webcomponents-fiori package\r\nimport \"@ui5/webcomponents-icons/dist/Assets.js\"; // Only if using the @ui5/webcomponents-icons package\r\n\r\nexport function MyApp() {\r\n  const history = useHistory();\r\n  const handleLogoClick = () => {\r\n    history.push(\"./home\");\r\n  };\r\n\r\n  const handleMenuItemClick = (item) => {\r\n    switch (item.detail.item.dataset.key) {\r\n      case \"Home\":\r\n        history.push(\"./home\");\r\n        break;\r\n      case \"Films\":\r\n        history.push(\"./films\");\r\n        break;\r\n      case \"People\":\r\n        history.push(\"./people\");\r\n        break;\r\n      case \"Species\":\r\n        history.push(\"./species\");\r\n        break;\r\n      case \"Planets\":\r\n        history.push(\"./planets\");\r\n        break;\r\n      case \"Vehicles\":\r\n        history.push(\"./vehicles\");\r\n        break;\r\n      case \"Starships\":\r\n        history.push(\"./starships\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ShellBar\r\n        logo={<img alt=\"logo\" src=\"react-logo.png\" />}\r\n        profile={<Avatar image=\"ui5-logo.png\" />}\r\n        primaryTitle={\"UI5 Star Wars React App\"}\r\n        onLogoClick={handleLogoClick}\r\n        onMenuItemClick={handleMenuItemClick}\r\n        menuItems={\r\n          <div>\r\n            <StandardListItem\r\n              data-key=\"Home\"\r\n              iconEnd={false}\r\n              infoState=\"None\"\r\n              selected={false}\r\n              type=\"Active\"\r\n            >\r\n              Home\r\n            </StandardListItem>\r\n            <StandardListItem\r\n              data-key=\"Films\"\r\n              iconEnd={false}\r\n              infoState=\"None\"\r\n              selected={false}\r\n              type=\"Active\"\r\n            >\r\n              Films\r\n            </StandardListItem>\r\n            <StandardListItem\r\n              data-key=\"People\"\r\n              iconEnd={false}\r\n              infoState=\"None\"\r\n              selected={false}\r\n              type=\"Active\"\r\n            >\r\n              People\r\n            </StandardListItem>\r\n            <StandardListItem\r\n              data-key=\"Species\"\r\n              iconEnd={false}\r\n              infoState=\"None\"\r\n              selected={false}\r\n              type=\"Active\"\r\n            >\r\n              Species\r\n            </StandardListItem>\r\n            <StandardListItem\r\n              data-key=\"Planets\"\r\n              iconEnd={false}\r\n              infoState=\"None\"\r\n              selected={false}\r\n              type=\"Active\"\r\n            >\r\n              Planets\r\n            </StandardListItem>\r\n            <StandardListItem\r\n              data-key=\"Vehicles\"\r\n              iconEnd={false}\r\n              infoState=\"None\"\r\n              selected={false}\r\n              type=\"Active\"\r\n            >\r\n              Vehicles\r\n            </StandardListItem>\r\n            <StandardListItem\r\n              data-key=\"Starships\"\r\n              iconEnd={false}\r\n              infoState=\"None\"\r\n              selected={false}\r\n              type=\"Active\"\r\n            >\r\n              Starships\r\n            </StandardListItem>\r\n          </div>\r\n        }\r\n      ></ShellBar>\r\n      <Switch>\r\n        <Route path=\"/people\" component={People} />\r\n        <Route path=\"/species\" component={Species} />\r\n        <Route path=\"/films\" component={Films} />\r\n        <Route path=\"/planets\" component={Planets} />\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/vehicles\" component={Vehicles} />\r\n        <Route path=\"/starships\" component={Starships} />\r\n        <Redirect from=\"/\" to=\"/home\" />\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n","import \"@ui5/webcomponents/dist/Assets.js\";\nimport { ThemeProvider } from \"@ui5/webcomponents-react/lib/ThemeProvider\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { MyApp } from \"./MyApp\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <ThemeProvider>\n        <MyApp />\n      </ThemeProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}